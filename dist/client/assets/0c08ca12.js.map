{"version":3,"file":"0c08ca12.js","sources":["../../../src/components/CartUIProvider.client.jsx"],"sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useContext,\n  createContext,\n} from 'react';\n\nexport const CartContext = createContext(null);\n\n/**\n * A client component that defines the behavior that occurs when a user is interacting with a cart (for example, opening or closing it)\n */\nexport default function CartUIProvider({children}) {\n  const [open, setOpen] = useState(false);\n\n  const openCart = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const closeCart = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const toggleCart = useCallback(() => {\n    setOpen(!open);\n  }, [setOpen, open]);\n\n  const contextValue = useMemo(() => {\n    return {\n      isCartOpen: open,\n      openCart,\n      closeCart,\n      toggleCart,\n    };\n  }, [open, openCart, closeCart, toggleCart]);\n\n  return (\n    <CartContext.Provider value={contextValue}>{children}</CartContext.Provider>\n  );\n}\n\nexport function useCartUI() {\n  return useContext(CartContext);\n}\n"],"names":["CartContext","createContext","children","open","setOpen","useState","openCart","useCallback","closeCart","toggleCart","contextValue","useMemo","isCartOpen","_jsx","useContext"],"mappings":"+CAQaA,KAAAA,GAAcC,wBAAc,IAAD,EAKD,WAAA,CAACC,YAAW,CACjD,KAAM,CAACC,EAAMC,GAAWC,EAAAA,QAAAA,SAAS,EAAD,EAE1BC,EAAWC,EAAAA,QAAAA,YAAY,IAAM,CACjCH,EAAQ,EAAD,CAAA,EACN,CAACA,CAAD,CAFyB,EAItBI,EAAYD,EAAAA,QAAAA,YAAY,IAAM,CAClCH,EAAQ,EAAD,CAAA,EACN,CAACA,CAAD,CAF0B,EAIvBK,EAAaF,EAAAA,QAAAA,YAAY,IAAM,CACnCH,EAAQ,CAACD,CAAF,CAAA,EACN,CAACC,EAASD,CAAV,CAF2B,EAIxBO,EAAeC,EAAAA,QAAAA,QAAQ,IACpB,EACLC,WAAYT,EACZG,WACAE,YACAC,YAAAA,GAED,CAACN,EAAMG,EAAUE,EAAWC,CAA5B,CAPyB,EAU1B,MAAAI,GAAC,EAAY,SAAb,CAAsB,MAAOH,EAA7B,UAAA,CADF,CAGD,CAE2B,YAAA,CAC1B,MAAOI,GAAAA,QAAAA,WAAWd,CAAD,CAClB"}