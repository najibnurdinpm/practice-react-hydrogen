{"version":3,"file":"9c003dfc.js","sources":["../../../node_modules/@shopify/hydrogen/dist/esnext/foundation/useUrl/useUrl.js","../../../node_modules/@shopify/hydrogen/dist/esnext/components/Seo/Seo.client.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { RSC_PATHNAME } from '../../constants';\nimport { parseJSON } from '../../utilities/parse';\nimport { useLocation } from '../Router/BrowserRouter.client';\nimport { useEnvContext, META_ENV_SSR } from '../ssr-interop';\n/**\n * The `useUrl` hook retrieves the current URL in a server or client component.\n */\nexport function useUrl() {\n    var _a, _b;\n    if (META_ENV_SSR) {\n        const serverUrl = new URL(useEnvContext((req) => req.url) // eslint-disable-line react-hooks/rules-of-hooks\n        );\n        if (serverUrl.pathname === RSC_PATHNAME) {\n            const state = parseJSON(serverUrl.searchParams.get('state') || '{}');\n            const parsedUrl = `${serverUrl.origin}${(_a = state.pathname) !== null && _a !== void 0 ? _a : ''}${(_b = state.search) !== null && _b !== void 0 ? _b : ''}`;\n            return new URL(parsedUrl);\n        }\n        return new URL(serverUrl);\n    }\n    /**\n     * We return a `URL` object instead of passing through `location` because\n     * the URL object contains important info like hostname, etc.\n     */\n    const location = useLocation(); // eslint-disable-line react-hooks/rules-of-hooks\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useMemo(() => new URL(window.location.href), [location]); // eslint-disable-line react-hooks/exhaustive-deps\n}\n","import React from 'react';\nimport { useUrl } from '../../foundation';\nimport { DefaultPageSeo } from './DefaultPageSeo.client';\nimport { HomePageSeo } from './HomePageSeo.client';\nimport { ProductSeo } from './ProductSeo.client';\nimport { CollectionSeo } from './CollectionSeo.client';\nimport { PageSeo } from './PageSeo.client';\n/**\n * The `Seo` component renders SEO information on a webpage.\n */\nexport function Seo(props) {\n    const url = useUrl().href;\n    switch (props.type) {\n        case 'defaultSeo':\n            return React.createElement(DefaultPageSeo, { ...{ url, ...props.data } });\n        case 'homepage':\n            return React.createElement(HomePageSeo, { ...{ url, ...props.data } });\n        case 'product':\n            return React.createElement(ProductSeo, { ...{ url, ...props.data } });\n        case 'collection':\n            return React.createElement(CollectionSeo, { ...props.data });\n        case 'page':\n            return React.createElement(PageSeo, { ...props.data });\n        default:\n            console.warn('The <Seo/> only accepts type prop with values of defaultSeo, homepage, product, collection, or page.');\n            return null;\n    }\n}\n"],"names":["useMemo"],"mappings":"s+BAQO,YAAkB,CAgBrB,KAAM,GAAW,IAEjB,MAAOA,GAAO,QAAA,QAAC,IAAM,GAAI,KAAI,OAAO,SAAS,IAAI,EAAG,CAAC,CAAQ,CAAC,CAClE,CCjBO,WAAa,EAAO,CACvB,KAAM,GAAM,EAAQ,EAAC,KACrB,OAAQ,EAAM,UACL,aACD,MAAO,GAAM,cAAc,EAAgB,KAAK,GAAE,OAAQ,EAAM,MAAQ,MACvE,WACD,MAAO,GAAM,cAAc,EAAa,KAAK,GAAE,OAAQ,EAAM,MAAQ,MACpE,UACD,MAAO,GAAM,cAAc,EAAY,KAAK,GAAE,OAAQ,EAAM,MAAQ,MACnE,aACD,MAAO,GAAM,cAAc,EAAe,KAAK,EAAM,KAAM,MAC1D,OACD,MAAO,GAAM,cAAc,EAAS,KAAK,EAAM,KAAM,UAErD,eAAQ,KAAK,sGAAsG,EAC5G,KAEnB"}